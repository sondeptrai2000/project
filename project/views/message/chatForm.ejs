<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="/jquery/jquery.js"></script>

    <style>
        div.container {
            width: 100%;
            height: 100%;
            border: 1px solid gray;
        }
        
        nav {
            float: left;
            max-width: 30%;
            margin: 0;
            padding: 1em;
        }
        
        article {
            margin-left: 170px;
            max-width: 60%;
            border-left: 1px solid gray;
            padding: 1em;
            overflow: hidden;
        }
    </style>
    <title>Chat</title>
</head>

<body>
    <div class="container">
        <nav>
            <div>
                <h2> Chat history</h2>
            </div>
            <div>
                Add chat: <input type='text' id='addChat'>
                <button onclick='addChat() '>Add to Chat</button>
            </div>
            <div id="chatHistory" style="height: 350px;width: 100%;overflow: auto;border: 1px solid #CCCCCC;margin: 1em 0;">
                <div id="UpdateHistory"></div>
                <% data1.forEach(function(data1) { %>
                    <%if (data1.person1 !== formData.sender) { %>
                        <ul class='<%=data1._id %>'> Name: <input type='text' name="studentName" value="<%= data1.person1 %>" readonly>
                            <input type='text' id='<%=data1._id %>' value="<%= data1.message[0].ownermessenger %>: <%= data1.message[0].messContent %>" readonly>
                            <button onclick="chatBox('<%=data1.person1 %>','<%=formData.sender%>','<%=data1._id %>')"> Chat</button>
                            <input type="text" class='allID' value="<%=data1._id %>"></input>
                        </ul>
                        <% } %>
                            <%if (data1.person2 !== formData.sender) { %>
                                <ul class='<%=data1._id %>'>
                                    Name: <input type='text' name="studentName" value="<%= data1.person2 %>" readonly>
                                    <input type='text' id='<%=data1._id %>' value="<%= data1.message[0].ownermessenger %>: <%= data1.message[0].messContent %>" readonly>
                                    <button onclick="chatBox('<%=data1.person2 %>','<%=formData.sender %>','<%=data1._id %>')"> Chat</button>
                                    <input type="text" class='allID' value="<%=data1._id %>"></input>
                                </ul>
                                <% } %>
                                    <% }); %>
            </div>
        </nav>
        <article>
            <div>
                <h2 id='conversation'>Conversation between
                    <%=formData.sender %> and
                        <%=formData.receiver %>
                </h2>
                <div id="scroll_box" style="height: 350px;width: 100%;overflow: auto;border: 1px solid #CCCCCC;margin: 1em 0;">
                    <div id='messContent'>
                    </div>
                </div>
            </div>
            <input id="receiver" type="text" value="<%=formData.receiver %>" />
            <input id="name" type="text" value="<%=formData.sender %>" />
            <input id="_idRoom" type="text" value="<%=data1[0]._id %>" />
            <input id="mess" type="text" />
            <div id="action" style="display: none;"></div>
            <button id="btnChat">Send</button>
        </article>
    </div>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
    // select relevant elements
    const _idRoom = document.querySelector("#_idRoom");
    const receiver = document.querySelector("#receiver");
    const name = document.querySelector("#name");
    const mess = document.querySelector("#mess");

    // establish socket.io connection
    const socket = io();

    $(document).ready(function() {
        connectAllConversation();
        firstConversation();
        $('#scroll_box').scrollTop($('#messContent').height())
    });
    //tạo room cho tất cả cuọco trò chuyện "online" để nhận thông báo khi người khác gửi tin nhắn
    function connectAllConversation() {
        var idConversationList = [];
        $('.allID').each(function() {
            idConversationList.push($(this).attr('value'));
        });
        socket.emit("tao-room", {
            idConversationList
        });
    }

    $('#mess').focusin(function() {
        socket.emit('typing', {
            sender: name.value,
            receiver: receiver.value,
            _idRoom: _idRoom.value
        })
    })
    $('#mess').focusout(function() {
        socket.emit('stopTyping', {
            sender: name.value,
            receiver: receiver.value,
            _idRoom: _idRoom.value
        })
    })
    socket.on("Typing", TypingOrNot)
    socket.on("notTyping", TypingOrNot)

    function TypingOrNot(data, action) {
        if (acction === 'typing') {
            $("#action").show()
            $("#action").html(data.sender + 'is typing')
        }
        if (acction === 'notTyping') {
            $("#action").hide()
            $("#action").html('')
        }
    }

    function firstConversation() {
        $.ajax({
            url: '/messenger/getMessenger',
            method: 'get',
            dataType: 'json',
            data: {
                sender: name.value,
                receiver: receiver.value
            },
            success: function(response) {
                if (response.msg == 'success') {
                    $.each(response.data, function(index, data) {
                        $.each(data.message, function(index, message) {
                            $('#messContent').append("<ul>" + message.ownermessenger + ": " + message.messContent + "</ul>")
                        });
                    });
                }
                $('#messContent').append('<div id="lol"></div>')
                $('#scroll_box').scrollTop($('#messContent').height())
            },
            error: function(response) {
                alert('server error');
            }
        });
    }

    function chatBox(receiver, sender, _idRoom) {
        var Room = '#' + _idRoom
        $(Room).css("font-weight", "normal");
        $('#receiver').val(receiver)
        $('#_idRoom').val(_idRoom)
        $('#name').val(sender)
        $('#conversation').html("Conversation between" + sender + " and " + receiver)
        $('#messContent').html("")
        $.ajax({
            url: '/messenger/getMessenger',
            method: 'get',
            dataType: 'json',
            data: {
                sender: sender,
                receiver: receiver
            },
            success: function(response) {
                if (response.msg == 'success') {
                    $.each(response.data, function(index, data) {
                        $.each(data.message, function(index, message) {
                            $('#messContent').append("<ul>" + message.ownermessenger + ": " + message.messContent + "</ul>")
                        });
                    });
                }
                $('#messContent').append('<div id="lol"></div>')
                $('#scroll_box').scrollTop($('#messContent').height())
            },
            error: function(response) {
                alert('server error');
            }
        });
    }
    $("#btnChat").click(function() {
            //sender gửi tin nhắn đền server và thông qua server gửi đến người nhận
            socket.emit("user-chat", {
                sender: name.value,
                mess: mess.value,
                receiver: receiver.value,
                _idRoom: _idRoom.value,
            })
            mess.value = "";
        })
        // server gửi tin nhắn lại từ sender cho receiver
    socket.on("server-chat", addMessageToHTML)

    // add message to our page
    function addMessageToHTML(message) {
        // create a new li element
        const ul = document.createElement("ul");
        // add message to the elements text
        ul.innerText = message.sender + ": " + message.mess;
        // add to list of messages
        $("#lol").append(ul);
        var newMess = '#' + message._idRoom
        $(newMess).val(message.sender + ": " + message.mess)
            //tin nhắn gửi đến nếu chưa xem thì in đậm, xem r thì in bt
        if (message._idRoom != _idRoom.value) {
            $(newMess).css("font-weight", "bold");
        } else if (message.receiver == $('#name').val()) {
            $(newMess).css("font-weight", "normal");
        }
        $('#scroll_box').scrollTop($('#messContent').height())
        var newestMess = '.' + message._idRoom
            //hiển thị cuộc trò chuyện mới nhất lên đầu lịch sử
        $(newestMess).prependTo("#UpdateHistory");
    }

    function addChat() {
        alert($('#addChat').val())
        $.ajax({
            url: '/messenger/addChat',
            method: 'post',
            dataType: 'json',
            data: {
                receiver: $('#addChat').val()
            },
            success: function(response) {
                if (response.msg == 'success') {
                    alert('tạo chát thành công')
                        // $.each(response.data, function(index, data) {
                        //     $.each(data.message, function(index, message) {
                        //         $('#messContent').append("<ul>" + message.ownermessenger + ": " + message.messContent + "</ul>")
                        //     });
                        // });
                }
                if (response.msg == 'error') {
                    alert('tạo chát  lỗi')
                }
                if (response.msg == 'user not found') {
                    alert('user not found')
                }
                if (response.msg == 'cuộc hội thoại đã được tạo') {
                    $('#conversation').html("Conversation between" + response.sender + " and " + response.receiver)
                    $('#messContent').html("")
                    $('#receiver').val(response.receiver)
                    $('#name').val(response.sender)
                    $('#_idRoom').val(response._idRoom)
                    $.each(response.data, function(index, data) {
                        $.each(data.message, function(index, message) {
                            $('#messContent').append("<ul>" + message.ownermessenger + ": " + message.messContent + "</ul>")
                        });
                    });
                    $('#messContent').append('<div id="lol"></div>')
                    var newestMess = '.' + response._idRoom
                        //hiển thị cuộc trò chuyện mới nhất lên đầu lịch sử
                    $(newestMess).prependTo("#UpdateHistory");
                    $('#scroll_box').scrollTop($('#messContent').height())
                }
                if (response.msg == 'lỗi khi tìm kiếm user') {
                    alert('lỗi khi tìm kiếm user')
                }
                if (response.msg == 'Bạn không thể tạo cuộc trò chuyện với chính mình') {
                    alert('Bạn không thể tạo cuộc trò chuyện với chính mình')
                }
                if (response.msg == 'tạo cuộc hội thoại thành công') {
                    $('#receiver').val(response.receiver)
                    $('#name').val(response.sender)
                    $('#_idRoom').val(response._idRoom)
                    $('#conversation').html("Conversation between" + response.sender + " and " + response.receiver)
                    $('#messContent').html("")
                    $('#messContent').append("<ul>Hệ thống: Đã kết nối! Ấn vào để chat</ul>")
                    $('#messContent').append('<div id="lol"></div>')
                    $('#scroll_box').scrollTop($('#messContent').height())
                    $("#UpdateHistory").append("<ul class='" + response._idRoom + "'> Name: <input type='text' name='studentName' value='" + response.receiver + "' readonly><input type='text' id='" + response._idRoom + "' value='Hệ thống: Đã kết nối! Ấn vào để chat' readonly><button onclick= chatBox('" + response.receiver + "','" + response.sender + "','" + response._idRoom + "')> Chat</button><input type='hidden' class='allID' value='" + response._idRoom + "'></input></ul>")
                    var idConversationList = [];
                    idConversationList.push(response._idRoom);
                    socket.emit("tao-room", {
                        idConversationList
                    });
                }
            },
            error: function(response) {
                alert('server error');
            }
        });
    }
</script>

</html>